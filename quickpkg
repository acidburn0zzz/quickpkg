#!/usr/bin/python

import argparse
import string
import os



quickpkg_version = '0.0'
supported_extensions = ['dmg', 'app']

# quickpkg

# modeled after munkiimport but to build a pkg

if __name__ == "__main__":
    # for convenience link to argparse tutorial:
    # https://docs.python.org/2/howto/argparse.html#id1
    parser = argparse.ArgumentParser(description="Attempts to build a pkg from the input.",
                                     epilog="""Installer item can be a dmg, or app.

        Example:
        quickpkg /path/to/installer_item""", formatter_class=argparse.RawTextHelpFormatter)

    parser.add_argument('--version', help='prints the version', action='version', version=quickpkg_version)

    # takes a path as input
    parser.add_argument('item_path', help="path to the installer item")

    args = parser.parse_args()

    # remove trailing '/' from path
    item_path = string.rstrip(args.item_path, '/')

    # get file extension
    (item_basename, item_extension) = os.path.splitext(item_path)
    item_extension = string.lstrip(item_extension, '.')
    
    # is extension supported
    if not item_extension in supported_extensions:
        print ".%s is not a supported extension!" % item_extension
        exit(1)
    
    # if item is a dmg, mount it and find useful contents
        
    # extract version and other metadata
    
    # run pkgutil to build result
    
   
