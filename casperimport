#!/usr/bin/python

import argparse
import string
import os


import jss

casperimport_version = '0.0'
supported_extensions = ['pkg']

# casperimport

# modeled after munkiimport but for casper

if __name__ == "__main__":
    # for convenience link to argparse tutorial:
    # https://docs.python.org/2/howto/argparse.html#id1
    parser = argparse.ArgumentParser(description="Imports an installer item into Casper.",
                                     epilog="""Installer item can be a pkg, mpkg, dmg, or app.

        Example:
        casperimport /path/to/installer_item""", formatter_class=argparse.RawTextHelpFormatter)

    parser.add_argument('--version', help='prints the version', action='version', version=casperimport_version)

    # takes a path as input
    parser.add_argument('item_path', help="path to the installer item")

    args = parser.parse_args()

    # remove trailing '/' from path
    item_path = string.rstrip(args.item_path, '/')

    # get file extension
    (item_basename, item_extension) = os.path.splitext(item_path)
    item_extension = string.lstrip(item_extension, '.')
    
    # is extension supported
    if not item_extension in supported_extensions:
        print ".%s is not a supported extension!" % item_extension
        exit(1)
    
    # if item is a dmg, mount it and find useful contents
    
    # extract version and other metadata
    
    # if item is a bundle try to find Info.plist
    
    # if item is a flat package, expand into tmp and get version
    
    # try to extract version from file name
    
    # if path is a pkg
        
        # extract version

    # if path is an .app
        
        # extract version
        
        # pkgbuild

    # upload to jss
    
    # if item is a directory, zip it
    
    # see if item already exists
    
    # copy pkg to caspershare/Packages

    # create Package object with JSS API

